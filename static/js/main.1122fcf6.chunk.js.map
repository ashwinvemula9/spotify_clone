{"version":3,"sources":["spotify.js","login.js","DataLayer.js","Header.js","SongRow.js","Body.js","Footer.js","SidebarOption.js","SideBar.js","player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Header","user","playlist","console","log","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","name","artists","map","artist","Body","spotify","develop_purpose","dispatch","playSong","id","play","uris","then","res","getMyCurrentPlayingTrack","r","item","playing","description","onClick","context_uri","fontSize","tracks","items","Footer","token","useEffect","getMyCurrentPlaybackState","is_playing","handlePlayPause","pause","skipToNext","skipToPrevious","Grid","container","spacing","xs","Slider","aria-labelledby","SidebarOption","title","Icon","SideBar","HomeIcon","SearchIcon","LibraryMusicIcon","Player","SpotifyWebApi","App","_token","window","location","hash","substring","split","reduce","initial","parts","decodeURIComponent","access_token","setAccessToken","getMe","getMyTopArtists","response","top_artists","getUserPlaylists","getPlaylist","Boolean","hostname","match","state","action","playlists","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"qZA+BaA,G,YAAQ,UA1BO,yCA0BP,sBAtBJ,mCAsBI,yBAxBD,iDAwBC,oBApBN,CACX,8BACA,4BACA,2BACA,gBACA,8BAgBYC,KAAK,OADA,0CClBNC,MATf,WACI,OACI,yBAAKC,UAAU,cACX,yBAAKC,IAAI,0EAA2EC,IAAI,iBACxF,uBAAGC,KAAMN,GAAT,wB,iBCNCO,G,MAAmBC,2BAEnBC,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,SAAzB,OACrB,kBAACL,EAAiBM,SAAlB,CAA2BC,MAAOC,qBAAWJ,EAAQD,IAChDE,IAIII,EAAoB,kBAAMC,qBAAWV,I,iCCkBnCW,MAtBf,WAAmB,IAAD,IAEwBF,IAFxB,0BAELG,EAFK,EAELA,KAGT,OALc,EAEAC,SAFA,KAIdC,QAAQC,IAAIH,GAER,yBAAKhB,UAAU,UACX,yBAAKA,UAAU,eACX,kBAAC,IAAD,MACA,2BAAOoB,YAAY,oBACfC,KAAK,UAGb,yBAAKrB,UAAU,gBACX,kBAACsB,EAAA,EAAD,CAAQrB,IAAG,OAAEe,QAAF,IAAEA,GAAF,UAAEA,EAAMO,OAAO,UAAf,aAAE,EAAiBC,IAAKtB,IAAI,KACvC,mCAAKc,QAAL,IAAKA,OAAL,EAAKA,EAAMS,iB,yDCHZC,MAff,YAAsC,IAAD,IAAlBC,aAAkB,MAAV,OAAU,EACjC,OACI,yBAAK3B,UAAU,WACX,yBAAKA,UAAU,gBAAgBC,IAAK0B,EAAMC,MAAML,OAAO,GAAGC,MAC1D,yBAAKxB,UAAU,gBACX,4BAAK2B,EAAME,MACX,2BACKF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAYA,EAAOH,QAAM/B,KAAK,KAChD6B,EAAMC,MAAMC,SCsElBI,MAvEf,YAA4B,IAAZC,EAAW,EAAXA,QAAW,EAEiBrB,IAFjB,mBAEdsB,EAFc,KAEdA,gBAAmBC,EAFL,KAIvBlB,QAAQC,IAAIgB,GAEZ,IAmBME,EAAW,SAACC,GACdJ,EACKK,KAAK,CACFC,KAAM,CAAC,iBAAD,OAAkBF,MAE3BG,MAAK,SAACC,GACHR,EAAQS,2BAA2BF,MAAK,SAACG,GACrCR,EAAS,CACLf,KAAM,WACNwB,KAAMD,EAAEC,OAEZT,EAAS,CACLf,KAAM,cACNyB,SAAS,WAM7B,OACI,yBAAK9C,UAAU,QACX,kBAAC,EAAD,CAAQkC,QAASA,IACjB,yBAAKlC,UAAU,aACX,yBAAKC,IAAG,OAAEkC,QAAF,IAAEA,OAAF,EAAEA,EAAiBZ,OAAO,GAAGC,IAAKtB,IAAI,KAC9C,yBAAKF,UAAU,iBACX,4CACA,mCAAKmC,QAAL,IAAKA,OAAL,EAAKA,EAAiBN,MACtB,kCAAIM,QAAJ,IAAIA,OAAJ,EAAIA,EAAiBY,eAI7B,yBAAK/C,UAAU,cACX,yBAAKA,UAAU,cACX,kBAAC,IAAD,CAAsBA,UAAU,eAAegD,QApD1C,SAACV,GAClBJ,EACKK,KAAK,CACFU,YAAY,4CAEfR,MAAK,SAACC,GACHR,EAAQS,2BAA2BF,MAAK,SAACG,GACrCR,EAAS,CACLf,KAAM,WACNwB,KAAMD,EAAEC,OAEZT,EAAS,CACLf,KAAM,cACNyB,SAAS,aAwCb,kBAAC,IAAD,CAAcI,SAAS,UACvB,kBAAC,IAAD,OAJR,OAOKf,QAPL,IAOKA,OAPL,EAOKA,EAAiBgB,OAAOC,MAAMrB,KAAI,SAAAc,GAAI,OACnC,kBAAC,EAAD,CAASlB,MAAOkB,EAAKlB,MAAOU,SAAUA,U,gKCgE3CgB,MA7Hf,YAA8B,IAAZnB,EAAW,EAAXA,QAAW,EAGoBrB,IAHpB,0BAGTgC,GAHS,EAGhBS,MAHgB,EAGTT,MAAMC,EAHG,EAGHA,QAAWV,EAHR,KAKzBmB,qBAAU,WACNrB,EAAQsB,4BACHf,MAAK,SAACG,GACH1B,QAAQC,IAAIyB,GACZR,EAAS,CACLf,KAAM,cACNyB,QAASF,EAAEa,aAGfrB,EAAS,CACLf,KAAM,WACNwB,KAAMD,EAAEC,YAKrB,CAACX,IAGJ,IAAMwB,EAAkB,WAChBZ,GACAZ,EAAQyB,QACRvB,EAAS,CACLf,KAAM,cACNyB,SAAS,MAGbZ,EAAQK,OACRH,EAAS,CACLf,KAAM,cACNyB,SAAS,MAiCrB,OACI,yBAAK9C,UAAU,UACX,yBAAKA,UAAU,gBACX,yBACIA,UAAU,oBACVC,IAAG,OAAE4C,QAAF,IAAEA,OAAF,EAAEA,EAAMjB,MAAML,OAAO,GAAGC,IAC3BtB,IAAG,OAAE2C,QAAF,IAAEA,OAAF,EAAEA,EAAMhB,OAEdgB,EACG,yBAAK7C,UAAU,oBACX,4BAAK6C,EAAKhB,MACV,2BAAIgB,EAAKf,QAAQC,KAAI,SAACC,GAAD,OAAYA,EAAOH,QAAM/B,KAAK,QAGnD,yBAAKE,UAAU,oBACX,kDACA,oCAKhB,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAaA,UAAU,kBACvB,kBAAC,IAAD,CAAkBgD,QAnDb,WACbd,EAAQ0B,aACR1B,EAAQS,2BAA2BF,MAAK,SAACG,GACrCR,EAAS,CACLf,KAAM,WACNwB,KAAMD,EAAEC,OAEZT,EAAS,CACLf,KAAM,cACNyB,SAAS,QA0C4B9C,UAAU,iBAC9C8C,EACG,kBAAC,IAAD,CACIE,QAASU,EACTR,SAAS,QACTlD,UAAU,iBAGV,kBAAC,IAAD,CACIgD,QAASU,EACTR,SAAS,QACTlD,UAAU,iBAGtB,kBAAC,IAAD,CAAcgD,QAnDL,WACjBd,EAAQ2B,iBACR3B,EAAQS,2BAA2BF,MAAK,SAACG,GACrCR,EAAS,CACLf,KAAM,WACNwB,KAAMD,EAAEC,OAEZT,EAAS,CACLf,KAAM,cACNyB,SAAS,QA0C4B9C,UAAU,iBAC/C,kBAAC,IAAD,CAAYA,UAAU,mBAE1B,yBAAKA,UAAU,iBACX,kBAAC8D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMjB,MAAI,GACN,kBAAC,IAAD,OAEJ,kBAACiB,EAAA,EAAD,CAAMjB,MAAI,GACN,kBAAC,IAAD,OAEJ,kBAACiB,EAAA,EAAD,CAAMjB,MAAI,EAACoB,IAAE,GACT,kBAACC,EAAA,EAAD,CAAQC,kBAAgB,2B,kBCrHjCC,MATf,YAAyC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC5B,OACI,yBAAKtE,UAAU,iBACVsE,GAAQ,kBAACA,EAAD,CAAMtE,UAAU,iBACxBsE,EAAO,4BAAKD,GAAc,2BAAIA,K,kCCsB5BE,MAtBf,WAAoB,IAAD,IAEkB1D,IAFlB,mBAENI,EAFM,KAENA,SACT,OAHe,KAIX,yBAAKjB,UAAU,WACX,yBAAKA,UAAU,gBAAgBC,IAAI,0EAA0EC,IAAI,SACjH,kBAAC,EAAD,CAAemE,MAAM,OAAOC,KAAME,MAClC,kBAAC,EAAD,CAAeH,MAAM,SAASC,KAAMG,MACpC,kBAAC,EAAD,CAAeJ,MAAM,eAAeC,KAAMI,MAC1C,6BACA,4BAAQ1E,UAAU,iBAAlB,aACA,6BAPJ,OASKiB,QATL,IASKA,GATL,UASKA,EAAWmC,aAThB,aASK,EAAkBrB,KAAI,SAAAc,GAAI,OACvB,kBAAC,EAAD,CAAewB,MAAOxB,EAAKhB,YCJ5B8C,MAZf,YAA4B,IAAXzC,EAAU,EAAVA,QACb,OACI,yBAAKlC,UAAU,UACX,yBAAKA,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAMkC,QAASA,IACf,kBAAC,EAAD,CAAQA,QAASA,OCH3BA,EAAU,IAAI0C,IAqELC,OAnEf,WAAe,MAIuBhE,IAJvB,0BAIJG,EAJI,EAIJA,KAAMsC,EAJF,EAIEA,MAASlB,EAJX,KAyDb,OAnDAmB,qBAAU,WACR,IAAMuB,EVGCC,OAAOC,SAASC,KAAKC,UAAU,GAAGC,MAAM,KAAKC,QAAO,SAACC,EAAQxC,GAChE,IAAIyC,EAAQzC,EAAKsC,MAAM,KAGvB,OAFAE,EAAQC,EAAM,IAAMC,mBAAmBD,EAAM,IAEtCD,IACT,IURwBG,aAC1BT,OAAOC,SAASC,KAAO,GAEnBH,IAEF1C,EAAS,CACPf,KAAM,YACNiC,MAAOwB,IAGT5C,EAAQuD,eAAeX,GAEvB5C,EAAQwD,QAAQjD,MAAK,SAACzB,GACpBoB,EAAS,CACPf,KAAM,WACNL,YAIJkB,EAAQyD,kBAAkBlD,MAAK,SAACmD,GAAD,OAC7BxD,EAAS,CACPf,KAAM,kBACNwE,YAAaD,OAIjBxD,EAAS,CACPf,KAAM,cACNa,QAASA,IAGXA,EAAQ4D,mBAAmBrD,MAAK,SAAAxB,GAC9BmB,EAAS,CACPf,KAAM,eACNJ,gBAIJiB,EAAQ6D,YAAY,0BAA0BtD,MAAK,SAAAC,GACjDN,EAAS,CACPf,KAAM,kBACNc,gBAAiBO,UAKtB,CAACY,EAAOlB,IAEXlB,QAAQC,IAAImC,EAAOtC,GAGjB,yBAAKhB,UAAU,OAEXsD,EAAQ,kBAAC,EAAD,CAAQpB,QAASA,IAAc,kBAAC,EAAD,MAExChB,QAAQC,IAAIH,EAAMsC,KC7DL0C,QACW,cAA7BjB,OAAOC,SAASiB,UAEe,UAA7BlB,OAAOC,SAASiB,UAEhBlB,OAAOC,SAASiB,SAASC,MACvB,2D,YCkDS1F,GAxDC,SAAC2F,EAAOC,GAEpB,OADAlF,QAAQC,IAAIiF,GACJA,EAAO/E,MACX,IAAK,WACD,OAAO,6BACA8E,GADP,IAEInF,KAAMoF,EAAOpF,OAErB,IAAK,YACD,OAAO,6BACAmF,GADP,IAEI7C,MAAO8C,EAAO9C,QAEtB,IAAK,eACD,OAAO,6BACA6C,GADP,IAEIlF,SAAUmF,EAAOnF,WAEzB,IAAK,kBACD,OAAO,6BACAkF,GADP,IAEIhE,gBAAiBiE,EAAOjE,kBAEhC,IAAK,WACD,OAAO,6BACAgE,GADP,IAEItD,KAAMuD,EAAOvD,OAErB,IAAK,kBACD,OAAO,6BACAsD,GADP,IAEIN,YAAaO,EAAOP,cAE5B,IAAK,cACD,OAAO,6BACAM,GADP,IAEIrD,QAASsD,EAAOtD,UAExB,IAAK,cACD,OAAO,6BACAqD,GADP,IAEIjE,QAASkE,EAAOlE,UAGxB,IAAK,gBACD,OAAO,6BACAiE,GADP,IAEIE,UAAWD,EAAOC,YAE1B,QACI,OAAOF,ICtDnBG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAWjG,aDVa,CACxBS,KAAM,KACNqF,UAAW,GACXvD,SAAS,EACTD,KAAM,KAEN5B,SAAU,KACVkB,gBAAiB,KACjB0D,YAAa,MCE0BrF,QAASA,IAC9C,kBAAC,GAAD,QAGJiG,SAASC,eAAe,SFqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBpE,MAAK,SAAAqE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL/F,QAAQ+F,MAAMA,EAAMC,c","file":"static/js/main.1122fcf6.chunk.js","sourcesContent":["//https://developer.spotify.com/\n//documentation/web-playback-sdk/quick-start/\n\n\n\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\"\n\nconst redirectURI = \"https://ashwinvemula9.github.io/spotify_clone/\";\n\nconst clientId = \"90fece13031946c2b4a07984f5036f11\";\n\nconst scopes = [\n    \"user-read-currently-playing\",\n    \"user-read-recently-played\",\n    \"user-read-playback-state\",\n    \"user-top-read\",\n    \"user-modify-playback-state\"\n];\n\n\nexport const getToken = () => {\n    return window.location.hash.substring(1).split('&').reduce((initial,item)=>{\n        let parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n        // debugger\n        return initial;\n    },{});\n}\n\n\n\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectURI}\n&scope=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`\n\n\n\n","import React from 'react';\nimport './login.css';\nimport { loginUrl } from './spotify';\n\nfunction Login() {\n    return (\n        <div className=\"login_main\">\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"  alt=\"spotify-logo\"/>\n            <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\n        </div>\n    )\n}\n\nexport default Login;\n","import React,{createContext, useContext, useReducer} from \"react\";\n\nexport const DataLayerContext = createContext();\n\nexport const DataLayer = ({initialState, reducer, children}) => (\n    <DataLayerContext.Provider value={useReducer(reducer,initialState)}>\n        {children}\n    </DataLayerContext.Provider>\n)\n\nexport const useDataLayerValue = () => useContext(DataLayerContext)","import React from 'react'\nimport './header.css'\nimport SearchIcon from '@material-ui/icons/Search';\nimport Avatar from '@material-ui/core/Avatar';\nimport { useDataLayerValue } from './DataLayer';\n\nfunction Header() {\n\n    const [{ user,playlist }, dispatch] = useDataLayerValue();\n\n    console.log(user)\n    return (\n        <div className=\"header\">\n            <div className=\"header_left\">\n                <SearchIcon />\n                <input placeholder=\"serach for Artist\"\n                    type=\"text\"\n                />\n            </div>\n            <div className=\"header_right\">\n                <Avatar src={user?.images[0]?.url} alt=\"\" />\n                <h4>{user?.display_name}</h4>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport './songrow.css'\n\nfunction SongRow({ track = \"test\" }) {\n    return (\n        <div className=\"songrow\">\n            <img className=\"songrow_album\" src={track.album.images[0].url} />\n            <div className=\"songrow_info\">\n                <h1>{track.name}</h1>\n                <p>\n                    {track.artists.map((artist) => artist.name).join(',')}\n                    {track.album.name}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default SongRow\n","import React from 'react';\nimport './Body.css'\nimport { useDataLayerValue } from './DataLayer';\nimport Header from './Header';\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from './SongRow';\n\n\nfunction Body({ spotify }) {\n\n    const [{ develop_purpose }, dispatch] = useDataLayerValue();\n\n    console.log(develop_purpose)\n\n    const playPlaylist = (id) => {\n        spotify\n            .play({\n                context_uri: `spotify:playlist:37i9dQZEVXcJZyENOWUFo7`,\n            })\n            .then((res) => {\n                spotify.getMyCurrentPlayingTrack().then((r) => {\n                    dispatch({\n                        type: \"SET_ITEM\",\n                        item: r.item,\n                    });\n                    dispatch({\n                        type: \"SET_PLAYING\",\n                        playing: true,\n                    });\n                });\n            });\n    };\n\n    const playSong = (id) => {\n        spotify\n            .play({\n                uris: [`spotify:track:${id}`],\n            })\n            .then((res) => {\n                spotify.getMyCurrentPlayingTrack().then((r) => {\n                    dispatch({\n                        type: \"SET_ITEM\",\n                        item: r.item,\n                    });\n                    dispatch({\n                        type: \"SET_PLAYING\",\n                        playing: true,\n                    });\n                });\n            });\n    };\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify} />\n            <div className=\"body_info\">\n                <img src={develop_purpose?.images[0].url} alt=\"\" />\n                <div className=\"body_infotext\">\n                    <strong>PLAYLIST</strong>\n                    <h2>{develop_purpose?.name}</h2>\n                    <p>{develop_purpose?.description}</p>\n                </div>\n            </div>\n\n            <div className=\"body_songs\">\n                <div className=\"body_icons\">\n                    <PlayCircleFilledIcon className=\"body_shuffle\" onClick={playPlaylist} />\n                    <FavoriteIcon fontSize=\"large\" />\n                    <MoreHorizIcon />\n                </div>\n\n                {develop_purpose?.tracks.items.map(item => (\n                    <SongRow track={item.track} playSong={playSong} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Body\n","import React, { useEffect } from 'react'\nimport './footer.css';\nimport { useDataLayerValue } from './DataLayer';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\nimport { Grid, Slider } from \"@material-ui/core\";\n\nfunction Footer({ spotify }) {\n\n\n    const [{ token, item, playing }, dispatch] = useDataLayerValue();\n\n    useEffect(() => {\n        spotify.getMyCurrentPlaybackState()\n            .then((r) => {\n                console.log(r);\n                dispatch({\n                    type: \"SET_PLAYING\",\n                    playing: r.is_playing,\n                });\n\n                dispatch({\n                    type: \"SET_ITEM\",\n                    item: r.item,\n                });\n            });\n        // .catch((r)=>console.log(r)) \n\n    }, [spotify]);\n\n\n    const handlePlayPause = () => {\n        if (playing) {\n            spotify.pause();\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: false,\n            });\n        } else {\n            spotify.play();\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        }\n    };\n\n    const skipNext = () => {\n        spotify.skipToNext();\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item,\n            });\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        });\n    };\n\n    const skipPrevious = () => {\n        spotify.skipToPrevious();\n        spotify.getMyCurrentPlayingTrack().then((r) => {\n            dispatch({\n                type: \"SET_ITEM\",\n                item: r.item,\n            });\n            dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n            });\n        });\n    };\n\n    return (\n        <div className=\"footer\">\n            <div className=\"footer__left\">\n                <img\n                    className=\"footer__albumLogo\"\n                    src={item?.album.images[0].url}\n                    alt={item?.name}\n                />\n                {item ? (\n                    <div className=\"footer__songInfo\">\n                        <h4>{item.name}</h4>\n                        <p>{item.artists.map((artist) => artist.name).join(\", \")}</p>\n                    </div>\n                ) : (\n                        <div className=\"footer__songInfo\">\n                            <h4>No song is playing</h4>\n                            <p>...</p>\n                        </div>\n                    )}\n            </div>\n\n            <div className=\"footer__center\">\n                <ShuffleIcon className=\"footer__green\" />\n                <SkipPreviousIcon onClick={skipNext} className=\"footer__icon\" />\n                {playing ? (\n                    <PauseCircleOutlineIcon\n                        onClick={handlePlayPause}\n                        fontSize=\"large\"\n                        className=\"footer__icon\"\n                    />\n                ) : (\n                        <PlayCircleOutlineIcon\n                            onClick={handlePlayPause}\n                            fontSize=\"large\"\n                            className=\"footer__icon\"\n                        />\n                    )}\n                <SkipNextIcon onClick={skipPrevious} className=\"footer__icon\" />\n                <RepeatIcon className=\"footer__green\" />\n            </div>\n            <div className=\"footer__right\">\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <PlaylistPlayIcon />\n                    </Grid>\n                    <Grid item>\n                        <VolumeDownIcon />\n                    </Grid>\n                    <Grid item xs>\n                        <Slider aria-labelledby=\"continuous-slider\" />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","import { Icon } from '@material-ui/core';\nimport React from 'react';\nimport './sidebarOption.css'\n\nfunction SidebarOption({ title, Icon }) {\n    return (\n        <div className=\"sidebarOption\">\n            {Icon && <Icon className=\"sidebar_icon\" />}\n            {Icon ? <h4>{title}</h4> : <p>{title}</p>}\n        </div>\n    )\n}\n\nexport default SidebarOption\n","import React from 'react';\nimport './Sidebar.css';\nimport SidebarOption from './SidebarOption';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\nimport { useDataLayerValue } from './DataLayer';\n\nfunction SideBar() {\n\n    const [{ playlist }, dispatch] = useDataLayerValue()\n    return (\n        <div className=\"sidebar\">\n            <img className=\"side_bar_logo\" src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"logo\" />\n            <SidebarOption title=\"Home\" Icon={HomeIcon} />\n            <SidebarOption title=\"Search\" Icon={SearchIcon} />\n            <SidebarOption title=\"Your Library\" Icon={LibraryMusicIcon} />\n            <br />\n            <strong className=\"sidebar_title\">PLAYLISTS</strong>\n            <hr />\n\n            {playlist ?.items?.map(item => (\n                <SidebarOption title={item.name} />\n\n            ))}\n\n        </div>\n    )\n}\n\nexport default SideBar\n","import React from 'react'\nimport Body from './Body'\nimport Footer from './Footer'\nimport './player.css'\nimport SideBar from './SideBar'\n\nfunction Player({spotify}) {\n    return (\n        <div className=\"player\">\n            <div className=\"player_body\">\n                <SideBar/>\n                <Body spotify={spotify} />\n                <Footer spotify={spotify}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Player\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './login';\nimport { getToken } from './spotify';\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport Player from './player';\nimport { useDataLayerValue } from './DataLayer';\n\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\n\n  // const [token, setToken] = useState(null);\n  const [{ user, token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const _token = getToken().access_token;\n    window.location.hash = \"\";\n\n    if (_token) {\n\n      dispatch({\n        type: 'SET_TOKEN',\n        token: _token\n      })\n\n      spotify.setAccessToken(_token);\n\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user,\n        });\n      });\n\n      spotify.getMyTopArtists().then((response) =>\n        dispatch({\n          type: \"SET_TOP_ARTISTS\",\n          top_artists: response,\n        })\n      );\n\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify,\n      });\n\n      spotify.getUserPlaylists().then(playlist => {\n        dispatch({\n          type: 'SET_PLAYLIST',\n          playlist\n        })\n      })\n\n      spotify.getPlaylist('7aVigxaJjYd6x2ZIgtVKno').then(res => {\n        dispatch({\n          type: 'SET_DEVELOP_PUR',\n          develop_purpose: res\n        })\n      })\n\n    }\n  }, [token, dispatch])\n\n  console.log(token, user);\n\n  return (\n    <div className=\"App\">\n      {\n        token ? <Player spotify={spotify} /> : <Login />\n      }\n      {console.log(user, token)}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\n    user: null,\n    playlists: [],\n    playing: false,\n    item: null,\n    // token: \"BQCBDVanBstrGOd1s4qH7Zl65Z_YpYO161nkAH80SXdbebhfVCoF6_-4UJWPRauVwvyAwmn7r5Oy1SJIC1pHeI10rHUNA1pPMHXNmfcHFP38xncMEOtGjWGL9QSsKKp9b76RQOOq4Kc_ogOnGUzWYFeM5LcCkwo-C2Ele9c2thXX3YUD\",\n    playlist: null,\n    develop_purpose: null,\n    top_artists: null,\n\n}\n\nconst reducer = (state, action) => {\n    console.log(action);\n    switch (action.type) {\n        case 'SET_USER':\n            return {\n                ...state,\n                user: action.user\n            }\n        case 'SET_TOKEN':\n            return {\n                ...state,\n                token: action.token\n            }\n        case 'SET_PLAYLIST':\n            return {\n                ...state,\n                playlist: action.playlist\n            }\n        case 'SET_DEVELOP_PUR':\n            return {\n                ...state,\n                develop_purpose: action.develop_purpose\n            }\n        case \"SET_ITEM\":\n            return {\n                ...state,\n                item: action.item,\n            };\n        case \"SET_TOP_ARTISTS\":\n            return {\n                ...state,\n                top_artists: action.top_artists,\n            };\n        case \"SET_PLAYING\":\n            return {\n                ...state,\n                playing: action.playing,\n            };\n        case \"SET_SPOTIFY\":\n            return {\n                ...state,\n                spotify: action.spotify,\n            };\n\n        case \"SET_PLAYLISTS\":\n            return {\n                ...state,\n                playlists: action.playlists,\n            };\n        default:\n            return state;\n    }\n}\n\n\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataLayer } from './DataLayer'\nimport * as serviceWorker from './serviceWorker';\nimport reducer, { initialState } from './reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}